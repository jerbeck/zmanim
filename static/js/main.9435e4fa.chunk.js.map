{"version":3,"sources":["components/Panel.js","components/PanelList.js","components/SearchBox.js","reportWebVitals.js","containers/App.js","index.js"],"names":["Panel","zman","time","className","PanelList","times","console","log","map","key","i","SearchBox","lookup","type","placeholder","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","getTimeZoneID","location","fetch","response","json","setState","tzid","zoneName","catch","err","processTimes","zmanim","ret","zmanMap","substring","Object","entries","item","lookupZip","event","target","value","length","getData","geoInput","state","url","forceUpdate","timestamp","this","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","date","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9435e4fa.chunk.js","sourcesContent":["import React from 'react';\n\nconst Panel = ({zman, time}) => {\n\treturn (\n\t\t<div className='tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t\t<h2>{zman}</h2>\n\t\t\t\t<p>{time}</p>\n\t\t</div>\n\t)\n}\n\nexport default Panel;","import React from 'react';\nimport Panel from './Panel';\n\nconst PanelList = ({ times }) => {\n\tconsole.log(times);\n\treturn (\n\t\t<div className='flex flex-column w-25 pa3 mr2 center'>\n\t\t\t{\n\t\t\t\ttimes.map((key, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Panel \n\t\t\t\t\t\tzman={key[0]}\n\t\t\t\t\t\ttime={key[1]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t\t)\n}\n\nexport default PanelList","import React from 'react';\n\nconst SearchBox = ({ lookup }) => {\n\treturn (\n\t\t<div className='tc pa2'>\n\t\t\t<input \n\t\t\t\tclassName='pa2 ba b--blue bg-lightest-blue'\n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='Zip Code'\n\t\t\t\tonChange={lookup} \n\t\t\t/>\t\t\t\t\n\t\t</div>\n\t)\n}\n\nexport default SearchBox;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport '../index.css';\nimport PanelList from '../components/PanelList';\nimport SearchBox from '../components/SearchBox';\nimport reportWebVitals from '../reportWebVitals';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      timestamp: '',\n      times: {},\n      tzid: '',\n    }\n  }\n\n  getTimeZoneID = (location) => {\n    const api_key= 'ZC4RP7CNVU0E';\n    fetch('https://api.timezonedb.com/v2.1/get-time-zone?key=' + api_key + '&format=json&by=position&lat=' + location[0] + '&lng=' + location[1])\n      .then(response => response.json())\n      .then(response => this.setState({ tzid: response.zoneName }))\n      .catch((err) => console.log(\"Error looking up timezone\", err));\n  }\n\n  processTimes = (zmanim) => {\n    let ret = {};\n    const zmanMap = {\n      'chatzotNight': 'Chatzos (Night)',\n      'alotHaShachar': 'Alos HaShachar',\n      'dawn': 'Dawn',\n      'sunrise': 'Sunrise',\n      'sofZmanShma': 'Latest Shema',\n      'sofZmanTfilla': 'Latest Tefilla',\n      'chatzot': 'Midday',\n      'minchaGedola': 'Mincha Gedolah',\n      'minchaKetana': 'Mincha Ketana',\n      'plagHaMincha': 'Plag HaMincha',\n      'sunset': 'Sunset',\n      'dusk': 'Dusk',\n      'tzeit42min': 'Tzeits HaKochavim',\n      'tzeit72min': 'Tzeits HaKochavim (72 min)'\n    }\n\n    for (let key in zmanim) {\n      if (zmanMap[key]) {\n        ret[zmanMap[key]] = zmanim[key].substring(11,16);\n      }\n    }\n\n    ret = Object.entries(ret).map((item, i) => {\n      return [item[0], item[1]]\n    });\n\n    return ret\n  }\n\n  lookupZip = (event) => {\n    if (event.target.value.length === 5) {\n      this.setState({ location: event.target.value });\n      this.getData(event.target.value);\n    }\n  }\n\n  getData = (geoInput) => {\n    console.log('running');\n    const { location } = this.state;\n    let url = 'https://www.hebcal.com/zmanim?cfg=json&';\n    if (!location) {\n      url = url + 'zip=' + geoInput;\n    } else {\n      console.log('timezone', this.state);\n      url = url + '&latitude=' + location[0] + '&longitude=' + location[1] + '&tzid=' + this.state.tzid;\n    }\n    this.forceUpdate();\n    fetch(url)\n      .then(response => response.json())\n      .then(response => this.setState({ times: response.times }))\n      .catch((err) => console.log('Something went wrong', err))\n  } \n\n  componentDidMount() {\n    console.log('mounted', this.state);\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.setState({ location: [position.coords.latitude, position.coords.longitude] });\n        this.getData([position.coords.latitude, position.coords.longitude]);\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    console.log('update', this.state);\n  }\n\n  render () {\n    console.log('render', this.state);\n    const { date, location } = this.state;\n    let { times } = this.state;\n    times = this.processTimes(times);\n    return !location ?\n      (\n      <div>\n        <h1 className='tc'>Please Enter your Zip Code</h1>\n        <SearchBox lookup={this.lookupZip} />\n      </div>\n      ) : (\n        <div className='tc'>\n          <h1 className='f1'>Zmanim</h1>\n          <h2 className='tc'>{date}</h2>\n          <h2 className='tc'>{location}</h2>\n          <PanelList times={times}/>\n        </div>\n      );\n    }\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}